import{m as o,C as n,h as w,T as y,d as x,M as f,a as b}from"./index.8a9f494f.js";function p(t){let s=new DOMParser().parseFromString(t,"text/html");return s.querySelectorAll('a[href*="://"]').forEach(a=>{a.setAttribute("target","_blank")}),s.documentElement.outerHTML}window.Alpine=o;o.store("challenge",{data:{view:""}});o.data("Hint",()=>({id:null,html:null,async showHint(t){if(t.target.open){let s=(await n.pages.challenge.loadHint(this.id)).data;if(s.content)this.html=p(s.html);else if(await n.pages.challenge.displayUnlock(this.id)){let a=await n.pages.challenge.loadUnlock(this.id);if(a.success){let d=(await n.pages.challenge.loadHint(this.id)).data;this.html=p(d.html)}else t.target.open=!1,n._functions.challenge.displayUnlockError(a)}else t.target.open=!1}}}));o.data("Challenge",()=>({id:null,next_id:null,submission:"",tab:null,solves:[],response:null,share_url:null,max_attempts:0,attempts:0,async init(){w()},getStyles(){let t={"modal-dialog":!0};try{switch(n.config.themeSettings.challenge_window_size){case"sm":t["modal-sm"]=!0;break;case"lg":t["modal-lg"]=!0;break;case"xl":t["modal-xl"]=!0;break;default:break}}catch(e){console.log("Error processing challenge_window_size"),console.log(e)}return t},async init(){w()},async showChallenge(){new y(this.$el).show()},async showSolves(){this.solves=await n.pages.challenge.loadSolves(this.id),this.solves.forEach(t=>(t.date=x(t.date).format("MMMM Do, h:mm:ss A"),t)),new y(this.$el).show()},getNextId(){return o.store("challenge").data.next_id},async nextChallenge(){let t=f.getOrCreateInstance("[x-ref='challengeWindow']");t._element.addEventListener("hidden.bs.modal",e=>{o.nextTick(()=>{this.$dispatch("load-challenge",this.getNextId())})},{once:!0}),t.hide()},async getShareUrl(){let t={type:"solve",challenge_id:this.id};const l=(await(await n.fetch("/api/v1/shares",{method:"POST",body:JSON.stringify(t)})).json()).data.url;this.share_url=l},copyShareUrl(){navigator.clipboard.writeText(this.share_url);let t=b.getOrCreateInstance(this.$el);t.enable(),t.show(),setTimeout(()=>{t.hide(),t.disable()},2e3)},async submitChallenge(){this.response=await n.pages.challenge.submitChallenge(this.id,this.submission),await this.renderSubmissionResponse()},async renderSubmissionResponse(){this.response.data.status==="correct"&&(this.submission=""),this.max_attempts>0&&this.response.data.status!="already_solved"&&(this.attempts+=1),this.$dispatch("load-challenges")}}));o.data("ChallengeBoard",()=>({loaded:!1,challenges:[],challenge:null,async init(){if(this.challenges=await n.pages.challenges.getChallenges(),window.mapManager=new k(this.challenges),this.loaded=!0,window.location.hash){let t=decodeURIComponent(window.location.hash.substring(1)),e=t.lastIndexOf("-");if(e>=0){let l=[t.slice(0,e),t.slice(e+1)][1];await this.loadChallenge(l)}}},getCategories(){const t=[];this.challenges.forEach(e=>{const{category:s}=e;t.includes(s)||t.push(s)});try{const e=n.config.themeSettings.challenge_category_order;if(e){const s=new Function(`return (${e})`);t.sort(s())}}catch(e){console.log("Error running challenge_category_order function"),console.log(e)}return t},getChallenges(t){let e=this.challenges;t!==null&&(e=this.challenges.filter(s=>s.category===t));try{const s=n.config.themeSettings.challenge_order;if(s){const l=new Function(`return (${s})`);e.sort(l())}}catch(s){console.log("Error running challenge_order function"),console.log(s)}return e},async loadChallenges(){this.challenges=await n.pages.challenges.getChallenges()},async loadChallenge(t){await n.pages.challenge.displayChallenge(t,e=>{e.data.view=p(e.data.view),o.store("challenge").data=e.data,o.nextTick(()=>{let s=f.getOrCreateInstance("[x-ref='challengeWindow']");s._element.addEventListener("hidden.bs.modal",l=>{history.replaceState(null,null," ")},{once:!0}),s.show(),history.replaceState(null,null,`#${e.data.name}-${t}`)})})}}));o.start();class k{constructor(e){this.challenges=e,this.icons=[],this.renderBackground(),this.renderTasks(),this.registerMouseOverHook(),this.width=1e3,this.height=500}getChallenges(){return this.challenges}renderBackground(){const e=document.getElementById("map"),s=e.getContext("2d"),l=new Image;l.src="/themes/atr25-theme/static/img/atr_map.svg",l.onload=()=>{s.drawImage(l,0,0,e.width,e.height)}}renderTasks(){let e=this.challenges.filter(s=>s.tags&&s.tags.length>0);console.log(e);for(let s=0;s<e.length;s++){const l=e[s],a={};for(let r=0;r<l.tags.length;r++){const c=l.tags[r].value.split(":"),i=c[0],g=c[1];i&&g&&(a[i]=g)}const d=document.getElementById("map").getContext("2d");if(a.x&&a.y){const r=parseInt(a.x),c=parseInt(a.y),i=new Image;i.src="/themes/atr25-theme/static/img/task.png",i.onload=()=>{d.drawImage(i,r,c,49,49),this.icons.push({x:r,y:c,width:49,height:49,task:l})}}}}registerMouseOverHook(){const e=document.getElementById("map");e.addEventListener("mousemove",s=>{const l=e.getBoundingClientRect(),a=s.clientX-l.left,u=s.clientY-l.top,d=l.width/this.width,r=l.height/this.height,c=a/d,i=u/r;let g=!1;for(let m=0;m<this.icons.length;m++){const h=this.icons[m];if(c>=h.x&&c<=h.x+h.width&&i>=h.y&&i<=h.y+h.height){g=!0,this.showTooltip(h.task,s.clientX,s.clientY),e.style.cursor="pointer";break}}g||(e.style.cursor="default",this.hideTooltip())})}showTooltip(e,s,l){let a=document.getElementById("map-tooltip");a||(a=document.createElement("div"),a.id="map-tooltip",a.style.position="absolute",a.style.background="rgba(0, 0, 0, 0.8)",a.style.color="white",a.style.padding="5px",a.style.borderRadius="5px",a.style.pointerEvents="none",document.body.appendChild(a)),a.textContent=e.name||"Task",a.style.left=`${s+10}px`,a.style.top=`${l+10}px`,a.style.display="block"}hideTooltip(){const e=document.getElementById("map-tooltip");e&&(e.style.display="none")}}
