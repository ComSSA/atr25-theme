import{m as d,C as i,h as f,T as x,d as T,M as y,a as C}from"./index.8a9f494f.js";function p(s){let t=new DOMParser().parseFromString(s,"text/html");return t.querySelectorAll('a[href*="://"]').forEach(n=>{n.setAttribute("target","_blank")}),t.documentElement.outerHTML}window.Alpine=d;d.store("challenge",{data:{view:""}});d.data("Hint",()=>({id:null,html:null,async showHint(s){if(s.target.open){let t=(await i.pages.challenge.loadHint(this.id)).data;if(t.content)this.html=p(t.html);else if(await i.pages.challenge.displayUnlock(this.id)){let n=await i.pages.challenge.loadUnlock(this.id);if(n.success){let c=(await i.pages.challenge.loadHint(this.id)).data;this.html=p(c.html)}else s.target.open=!1,i._functions.challenge.displayUnlockError(n)}else s.target.open=!1}}}));d.data("Challenge",()=>({id:null,next_id:null,submission:"",tab:null,solves:[],response:null,share_url:null,max_attempts:0,attempts:0,async init(){f()},getStyles(){let s={"modal-dialog":!0};try{switch(i.config.themeSettings.challenge_window_size){case"sm":s["modal-sm"]=!0;break;case"lg":s["modal-lg"]=!0;break;case"xl":s["modal-xl"]=!0;break;default:break}}catch(e){console.log("Error processing challenge_window_size"),console.log(e)}return s},async init(){f()},async showChallenge(){new x(this.$el).show()},async showSolves(){this.solves=await i.pages.challenge.loadSolves(this.id),this.solves.forEach(s=>(s.date=T(s.date).format("MMMM Do, h:mm:ss A"),s)),new x(this.$el).show()},getNextId(){return d.store("challenge").data.next_id},async nextChallenge(){let s=y.getOrCreateInstance("[x-ref='challengeWindow']");s._element.addEventListener("hidden.bs.modal",e=>{d.nextTick(()=>{this.$dispatch("load-challenge",this.getNextId())})},{once:!0}),s.hide()},async getShareUrl(){let s={type:"solve",challenge_id:this.id};const a=(await(await i.fetch("/api/v1/shares",{method:"POST",body:JSON.stringify(s)})).json()).data.url;this.share_url=a},copyShareUrl(){navigator.clipboard.writeText(this.share_url);let s=C.getOrCreateInstance(this.$el);s.enable(),s.show(),setTimeout(()=>{s.hide(),s.disable()},2e3)},async submitChallenge(){this.response=await i.pages.challenge.submitChallenge(this.id,this.submission),await this.renderSubmissionResponse()},async renderSubmissionResponse(){this.response.data.status==="correct"&&(this.submission=""),this.max_attempts>0&&this.response.data.status!="already_solved"&&(this.attempts+=1),this.$dispatch("load-challenges")}}));d.data("ChallengeBoard",()=>({loaded:!1,challenges:[],challenge:null,async init(){if(this.challenges=await i.pages.challenges.getChallenges(),window.mapManager=new k(this.challenges),this.loaded=!0,window.location.hash){let s=decodeURIComponent(window.location.hash.substring(1)),e=s.lastIndexOf("-");if(e>=0){let a=[s.slice(0,e),s.slice(e+1)][1];await this.loadChallenge(a)}}},getCategories(){const s=[];this.challenges.forEach(e=>{const{category:t}=e;s.includes(t)||s.push(t)});try{const e=i.config.themeSettings.challenge_category_order;if(e){const t=new Function(`return (${e})`);s.sort(t())}}catch(e){console.log("Error running challenge_category_order function"),console.log(e)}return s},getChallenges(s){let e=this.challenges;s!==null&&(e=this.challenges.filter(t=>t.category===s));try{const t=i.config.themeSettings.challenge_order;if(t){const a=new Function(`return (${t})`);e.sort(a())}}catch(t){console.log("Error running challenge_order function"),console.log(t)}return e},async loadChallenges(){this.challenges=await i.pages.challenges.getChallenges()},async loadChallenge(s){await i.pages.challenge.displayChallenge(s,e=>{e.data.view=p(e.data.view),d.store("challenge").data=e.data,d.nextTick(()=>{let t=y.getOrCreateInstance("[x-ref='challengeWindow']");t._element.addEventListener("hidden.bs.modal",a=>{history.replaceState(null,null," ")},{once:!0}),t.show(),history.replaceState(null,null,`#${e.data.name}-${s}`)})})}}));d.start();class k{constructor(e){this.challenges=e,this.icons=[],this.registerMouseOverHook(),this.width=1020,this.height=496,this.render()}getChallenges(){return this.challenges}async render(){await this.renderBackground(),await this.renderRoomText(),await this.renderTasks()}async renderBackground(){const e=document.getElementById("map"),t=e.getContext("2d"),a=new Image;a.src="/themes/atr25-theme/static/img/map.svg",await new Promise(n=>{a.onload=()=>{t.drawImage(a,0,0,e.width,e.height),n()}})}async renderRoomText(){let t=[{text:"Something|Here",x:764,y:404,room:"202"},{text:"Something|Here",x:350,y:380,room:"202.2"},{text:"203",x:90,y:363,room:"203"},{text:"Cafeteria",x:150,y:100,room:"204"},{text:"Terrestrial|History",x:363,y:100,room:"205"},{text:"Astral|Sciences",x:560,y:100,room:"206"},{text:"Staff Halls",x:753,y:100,room:"207"},{text:"The Lion's|Eye|Diamond",x:944,y:100,room:"208"}];window.serverTexts&&(t=window.serverTexts);const n=document.getElementById("map").getContext("2d");n.font="26px Arial",n.textAlign="center",n.textBaseline="middle",n.strokeStyle="black",n.lineWidth=4,n.fillStyle="white";for(let l=0;l<t.length;l++){const c=t[l],o=c.text.split("|"),r=36,h=c.y-(o.length-1)*(r/2);for(let g=0;g<o.length;g++){const u=h+g*r;n.strokeText(o[g],c.x,u),n.fillText(o[g],c.x,u)}}}async renderTasks(){let e=this.challenges.filter(t=>t.tags&&t.tags.length>0&&!t.solved_by_me);for(let t=0;t<e.length;t++){const a=e[t],n={};for(let o=0;o<a.tags.length;o++){const r=a.tags[o].value.split(":"),h=r[0],g=r[1];h&&g&&(n[h]=g)}const c=document.getElementById("map").getContext("2d");if(n.x&&n.y){const o=parseInt(n.x),r=parseInt(n.y),h=new Image;h.src="/themes/atr25-theme/static/img/task.png",h.onload=()=>{c.drawImage(h,o,r,49,49),this.icons.push({x:o,y:r,width:49,height:49,task:a})}}}}registerMouseOverHook(){const e=document.getElementById("map");let t=null;e.addEventListener("mousemove",a=>{const n=e.getBoundingClientRect(),l=a.clientX-n.left,c=a.clientY-n.top,o=n.width/this.width,r=n.height/this.height,h=l/o,g=c/r;let u=!1;for(let w=0;w<this.icons.length;w++){const m=this.icons[w];if(h>=m.x&&h<=m.x+m.width&&g>=m.y&&g<=m.y+m.height){u=!0,t=m.task;const v=window.scrollX||document.documentElement.scrollLeft,b=window.scrollY||document.documentElement.scrollTop;this.showTooltip(m.task,a.clientX+v,a.clientY+b),e.style.cursor="pointer";break}}u||(t=null,e.style.cursor="default",this.hideTooltip())}),e.addEventListener("click",async()=>{if(t){const a=t.id;a&&(this.hideTooltip(),await i.pages.challenge.displayChallenge(a,n=>{n.data.view=p(n.data.view),d.store("challenge").data=n.data,d.nextTick(()=>{let l=y.getOrCreateInstance("[x-ref='challengeWindow']");l._element.addEventListener("hidden.bs.modal",()=>{history.replaceState(null,null,"/challenges")},{once:!0}),l.show(),history.replaceState(null,null,`#${n.data.name}-${a}`)})}))}})}showTooltip(e,t,a){let n=document.getElementById("map-tooltip");n||(n=document.createElement("div"),n.id="map-tooltip",document.body.appendChild(n));let l=document.createElement("div");l.style.position="absolute",l.style.visibility="hidden",l.style.whiteSpace="nowrap",l.innerHTML=`
      <div>${e.name}</div>
      <div>${e.category} - ${e.value}</div>
    `,document.body.appendChild(l);const c=l.offsetWidth;document.body.removeChild(l);const o=window.innerWidth;let r=t+10;r+c>o&&(r=t-c-10),n.innerHTML=`
      <div>${e.name}</div>
      <div>${e.category} - ${e.value}</div>
    `,n.style.left=`${r}px`,n.style.top=`${a+10}px`,n.classList.add("visible")}hideTooltip(){const e=document.getElementById("map-tooltip");e&&e.classList.remove("visible")}}
